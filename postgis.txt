CREATE EXTENSION postgis;


-- Создание таблицы "Здания"
CREATE TABLE Buildings (
  uid VARCHAR(10) PRIMARY KEY,
  floors INT,
  coordinates GEOMETRY(Point, 4326)
);

-- Вставка данных
INSERT INTO Buildings (uid, floors, coordinates)
VALUES
  ('DB0001', 5, ST_SetSRID(ST_MakePoint(-0.199624286154122, 51.519470704814033), 4326)),
  ('DB0002', 2, ST_SetSRID(ST_MakePoint(-0.164514085183909, 51.535044799928521), 4326)),
  ('DB0003', 5, ST_SetSRID(ST_MakePoint(-0.138361384233426, 51.540964543873187), 4326)),
  ('DB0004', 7, ST_SetSRID(ST_MakePoint(-0.092614151989766, 51.516235799771131), 4326)),
  ('DB0005', 3, ST_SetSRID(ST_MakePoint(-0.103091227905709, 51.504538456851705), 4326)),
  ('DB0006', 4, ST_SetSRID(ST_MakePoint(-0.111648839531708, 51.504837149778091), 4326)),
  ('DB0007', 5, ST_SetSRID(ST_MakePoint(-0.12148609401767, 51.488953927237603), 4326)),
  ('DB0008', 7, ST_SetSRID(ST_MakePoint(-0.154116986946714, 51.482628972180535), 4326)),
  ('DB0009', 3, ST_SetSRID(ST_MakePoint(-0.161235000355256, 51.481732450871306), 4326)),
  ('DB0010', 6, ST_SetSRID(ST_MakePoint(-0.198824509366654, 51.518425606770265), 4326));

1 - Расстояние между зданиями в метрах.

SELECT
  b1.uid AS building_uid1,
  b2.uid AS building_uid2,
  ST_DistanceSphere(b1.coordinates, b2.coordinates) AS distance_meters
FROM
  Buildings b1
CROSS JOIN
  Buildings b2
WHERE
  b1.uid <> b2.uid;


"building_uid1"	"building_uid2"	"distance_meters"
"DB0001"	"DB0002"	2983.04014165
"DB0001"	"DB0003"	4865.32966091
"DB0001"	"DB0004"	7413.13129957
"DB0001"	"DB0005"	6883.56532127
"DB0001"	"DB0006"	6301.78526527
"DB0001"	"DB0007"	6384.66649747
"DB0001"	"DB0008"	5167.64830749
"DB0001"	"DB0009"	4966.91115375
"DB0001"	"DB0010"	128.71286083
"DB0002"	"DB0001"	2983.04014165
"DB0002"	"DB0003"	1924.84457972
"DB0002"	"DB0004"	5395.96506806
"DB0002"	"DB0005"	5437.66298917
"DB0002"	"DB0006"	4966.05513577
"DB0002"	"DB0007"	5927.28857678
"DB0002"	"DB0008"	5872.6310462
"DB0002"	"DB0009"	5932.4131369
"DB0002"	"DB0010"	3008.14693847
"DB0003"	"DB0001"	4865.32966091
"DB0003"	"DB0002"	1924.84457972
"DB0003"	"DB0004"	4192.37557467
"DB0003"	"DB0005"	4728.67148294
"DB0003"	"DB0006"	4421.92041635
"DB0003"	"DB0007"	5900.03775688
"DB0003"	"DB0008"	6577.62628079
"DB0003"	"DB0009"	6773.8646852
"DB0003"	"DB0010"	4875.95872903
"DB0004"	"DB0001"	7413.13129957
"DB0004"	"DB0002"	5395.96506806
"DB0004"	"DB0003"	4192.37557467
"DB0004"	"DB0005"	1489.12864924
"DB0004"	"DB0006"	1828.04138474
"DB0004"	"DB0007"	3632.69389795
"DB0004"	"DB0008"	5664.73685354
"DB0004"	"DB0009"	6105.9619881
"DB0004"	"DB0010"	7353.17693698
"DB0005"	"DB0001"	6883.56532127
"DB0005"	"DB0002"	5437.66298918
"DB0005"	"DB0003"	4728.67148294
"DB0005"	"DB0004"	1489.12864924
"DB0005"	"DB0006"	593.2322567
"DB0005"	"DB0007"	2150.47766513
"DB0005"	"DB0008"	4291.14924675
"DB0005"	"DB0009"	4757.55360606
"DB0005"	"DB0010"	6802.62276062
"DB0006"	"DB0001"	6301.78526527
"DB0006"	"DB0002"	4966.05513576
"DB0006"	"DB0003"	4421.92041635
"DB0006"	"DB0004"	1828.04138474
"DB0006"	"DB0005"	593.2322567
"DB0006"	"DB0007"	1892.87609849
"DB0006"	"DB0008"	3839.55267793
"DB0006"	"DB0009"	4287.78964465
"DB0006"	"DB0010"	6219.1484294
"DB0007"	"DB0001"	6384.66649747
"DB0007"	"DB0002"	5927.28857678
"DB0007"	"DB0003"	5900.03775688
"DB0007"	"DB0004"	3632.69389795
"DB0007"	"DB0005"	2150.47766513
"DB0007"	"DB0006"	1892.87609849
"DB0007"	"DB0008"	2366.36292298
"DB0007"	"DB0009"	2867.07135103
"DB0007"	"DB0010"	6276.44493376
"DB0008"	"DB0001"	5167.64830749
"DB0008"	"DB0002"	5872.6310462
"DB0008"	"DB0003"	6577.62628079
"DB0008"	"DB0004"	5664.73685354
"DB0008"	"DB0005"	4291.14924675
"DB0008"	"DB0006"	3839.55267793
"DB0008"	"DB0007"	2366.36292298
"DB0008"	"DB0009"	502.88538242
"DB0008"	"DB0010"	5041.87278296
"DB0009"	"DB0001"	4966.91115375
"DB0009"	"DB0002"	5932.4131369
"DB0009"	"DB0003"	6773.8646852
"DB0009"	"DB0004"	6105.9619881
"DB0009"	"DB0005"	4757.55360606
"DB0009"	"DB0006"	4287.78964465
"DB0009"	"DB0007"	2867.07135103
"DB0009"	"DB0008"	502.88538242
"DB0009"	"DB0010"	4839.15389661
"DB0010"	"DB0001"	128.71286083
"DB0010"	"DB0002"	3008.14693847
"DB0010"	"DB0003"	4875.95872903
"DB0010"	"DB0004"	7353.17693698
"DB0010"	"DB0005"	6802.62276062
"DB0010"	"DB0006"	6219.1484294
"DB0010"	"DB0007"	6276.44493376
"DB0010"	"DB0008"	5041.87278296
"DB0010"	"DB0009"	4839.15389661


2 - Найти для каждого здания ближайшие здания расположенные в радиусе 200м

SELECT
  b1.uid AS building_uid,
  b2.uid AS nearest_building_uid,
  ST_DistanceSphere(b1.coordinates, b2.coordinates) AS distance_meters
FROM
  Buildings b1
JOIN
  Buildings b2 ON b1.uid <> b2.uid
WHERE
  ST_DistanceSphere(b1.coordinates, b2.coordinates) <= 200;

"building_uid"	"nearest_building_uid"	"distance_meters"
"DB0001"	"DB0010"	128.71286083
"DB0010"	"DB0001"	128.71286083

